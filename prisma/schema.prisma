// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(cuid())
  fullName              String
  username              String    @unique
  email                 String    @unique
  emailVerified         Boolean   @default(false)
  verificationExpiresAt DateTime?
  verificationToken     String?   @unique
  password              String

  favorites             Favorite[] 

  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt @map("updatedAt")

  @@map("users")
}

model Product {
   id                    String    @id @default(cuid())
   name String
   image String
   description String  @db.LongText
   price Int @default(0) @db.UnsignedInt
   itemSold Int @default(0) @map("item_sold") @db.UnsignedInt
   rating Int @default(5) @db.UnsignedInt

   categoryId  String?
  category    Category? @relation(fields: [categoryId], references: [id])

  favoritedBy Favorite[] 

   createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Category {
  id        String     @id @default(cuid())
  name      String     @unique
  products  Product[]

  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")
}

model Favorite {
  userId    String
  productId String

  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())

  @@id([userId, productId]) 
}